#!/usr/bin/env python

import re
import sys
from string import Template

def expand(par, default):
    return par if par[0] != "@" else default

def yesno(cond):
    return "yes" if cond else "no"

format = "@format@"
assert format == "carpet"

nodes = expand("@nodes@", None)
if nodes:
    suffix = "-n%s-%s" % (nodes, format)
else:
    suffix = "-%s" % format

lines = """
ActiveThorns = "
    Boundary
    Carpet
    CarpetIOASCII
    CarpetIOHDF5
    CarpetLib
    CarpetRegrid2
    CartGrid3D
    CoordBase
    Formaline
    IDScalarWaveC
    IOUtil
    InitBase
    SymBase
    Time
    WaveToyC
"

Cactus::cctk_run_title = "SimulationIO"
Cactus::cctk_full_warnings = yes
Cactus::highlight_warning_messages = no

Cactus::cctk_itlast = 2048

Carpet::domain_from_coordbase = yes
CartGrid3D::type = "coordbase"
CoordBase::domainsize = "minmax"
CoordBase::xmin = -1.0
CoordBase::ymin = -1.0
CoordBase::zmin = -1.0
CoordBase::xmax = +1.0
CoordBase::ymax = +1.0
CoordBase::zmax = +1.0
CoordBase::dx = 0.025
CoordBase::dy = 0.025
CoordBase::dz = 0.025

Carpet::max_refinement_levels = 10
Carpet::max_timelevels = 3
CarpetRegrid2::num_centres = 1
CarpetRegrid2::num_levels_1 = 3
CarpetRegrid2::radius_1[1] = 0.5
CarpetRegrid2::radius_1[2] = 0.2

InitBase::initial_data_setup_method = "init_all_levels"
IDScalarWave::initial_data = "standing"
IDScalarWaveC::kx = 0.25
IDScalarWaveC::ky = 0.25
IDScalarWaveC::kz = 0.25

Time::dtfac = 0.5
WaveToy::bound = "zero"

IO::out_dir = $$parfile

CarpetIOASCII::one_file_per_group = yes
CarpetIOASCII::out1D_every = 256
CarpetIOASCII::out1D_vars = "
    wavetoy::scalarevolve
"

IO::recover = "auto"
IO::recover_dir = "../../csio-checkpoint$suffix/output-0000/csio-checkpoint"

CarpetIOHDF5::checkpoint = yes
IO::checkpoint_every = 512
IO::checkpoint_ID = yes
IO::checkpoint_on_terminate = yes
IO::checkpoint_dir = $$parfile

Formaline::output_source = no
"""

open(re.sub(r'(.*)\.rpar$', r'\1.par', sys.argv[0]), 'w').write(
    Template(lines).substitute(locals()))
